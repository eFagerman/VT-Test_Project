//
// ResponseOperator.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ResponseOperator: Codable, JSONEncodable, Hashable {

    public var code: String
    /** PriceGroups holds all price groups for the operator */
    public var priceGroups: [ResponseOperatorPriceGroup]?
    /** Products holds all the products for the operator */
    public var products: [ResponseOperatorProduct]?
    /** Resources contains a map with localizations */
    public var resources: [String: [String: String]]?
    /** Zones holds all zones for the operator */
    public var zones: [ResponseOperatorZone]?

    public init(code: String, priceGroups: [ResponseOperatorPriceGroup]? = nil, products: [ResponseOperatorProduct]? = nil, resources: [String: [String: String]]? = nil, zones: [ResponseOperatorZone]? = nil) {
        self.code = code
        self.priceGroups = priceGroups
        self.products = products
        self.resources = resources
        self.zones = zones
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case priceGroups = "price_groups"
        case products
        case resources
        case zones
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(code, forKey: .code)
        try container.encodeIfPresent(priceGroups, forKey: .priceGroups)
        try container.encodeIfPresent(products, forKey: .products)
        try container.encodeIfPresent(resources, forKey: .resources)
        try container.encodeIfPresent(zones, forKey: .zones)
    }
}

